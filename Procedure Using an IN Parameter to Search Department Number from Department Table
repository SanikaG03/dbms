CREATE TABLE department (
    dept_id INT PRIMARY KEY,           -- Primary key for dept_id
    dept_name VARCHAR(50) NOT NULL,     -- Department name (not null)
    location VARCHAR(50)               -- Department location
);


CREATE OR REPLACE PROCEDURE search_dept_by_id (
    p_dept_id IN INT    -- IN parameter for dept_id
) AS
    v_dept_name VARCHAR(50);  -- Variable to store department name
    v_location VARCHAR(50);   -- Variable to store department location
BEGIN
    -- Search for the department using the provided dept_id
    SELECT dept_name, location 
    INTO v_dept_name, v_location
    FROM department
    WHERE dept_id = p_dept_id;
    
    -- Output the results
    DBMS_OUTPUT.PUT_LINE('Department Name: ' || v_dept_name);
    DBMS_OUTPUT.PUT_LINE('Location: ' || v_location);
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('No department found with dept_id: ' || p_dept_id);
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error: ' || SQLERRM);  -- Handle other errors
END;
/


BEGIN
    search_dept_by_id(101);  -- Call the procedure with dept_id = 101
END;
/

BEGIN
    search_dept_by_id(102);  -- Call the procedure with dept_id = 102
END;
/

CREATE OR REPLACE PROCEDURE search_dept_by_id (
    p_dept_id IN INT    -- IN parameter for dept_id
) AS
    v_dept_name VARCHAR(50);
    v_location VARCHAR(50);
BEGIN
    -- Search for the department using the provided dept_id
    SELECT dept_name, location 
    INTO v_dept_name, v_location
    FROM department
    WHERE dept_id = p_dept_id;

    -- Output the results
    DBMS_OUTPUT.PUT_LINE('Department Name: ' || v_dept_name);
    DBMS_OUTPUT.PUT_LINE('Location: ' || v_location);
    
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('No department found with dept_id: ' || p_dept_id);
    WHEN VALUE_ERROR THEN
        DBMS_OUTPUT.PUT_LINE('Error: Invalid data type for dept_id');
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error: ' || SQLERRM);  -- Catch any other errors
END;
/
